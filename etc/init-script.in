#! /bin/sh

### BEGIN INIT INFO
# Provides:          openct
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Should-Start:      $local_fs
# Should-Stop:       $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: smart card terminal framework
# Description:       Initialize the OpenCT smart card terminal
#                    framework.
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=@sbindir@/openct-control
STATUS_DIR="@OPENCT_SOCKET_PATH@"
STATUS_FILE="$STATUS_DIR/status"
NAME=OpenCT
DESC="smart card terminal framework"

test -x $DAEMON || exit 0

# create the directory for our status and socket files,
# if it does not exist.
if ! test -e "$STATUS_DIR"
then
	mkdir "$STATUS_DIR"

	# maybe you also want to set owner ship and permissions here.
	# this example would assign the directory to a group "scard"
	# and set permissions so only users in that group can access
	# smart card readers via openct.
	#chown root:scard "$STATUS_DIR"
	#chmod 0750 "$STATUS_DIR"
fi

set -e

case "$1" in
  start)
	echo -n "Starting $DESC: $NAME"
	$DAEMON init
	echo "."
	;;
  stop)
	echo -n "Stopping $DESC: $NAME "
	if [ -f $STATUS_FILE ]; then
		$DAEMON shutdown
		rm -f $STATUS_FILE
	fi
	echo "."
	;;
  #reload)
	#
	#	If the daemon can reload its config files on the fly
	#	for example by sending it SIGHUP, do it here.
	#
	#	If the daemon responds to changes in its config file
	#	directly anyway, make this a do-nothing entry.
	#
	# echo -n "Reloading $DESC configuration..."
	# start-stop-daemon --stop --signal 1 --quiet --pidfile \
	#	@localstatedir@/run/$NAME.pid --exec $DAEMON
	# echo "done."
  #;;
  restart|force-reload)
	#
	#	If the "reload" option is implemented, move the "force-reload"
	#	option to the "reload" entry above. If not, "force-reload" is
	#	just the same as "restart".
	#
	echo -n "Restarting $DESC: $NAME"
	if [ -f $STATUS_FILE ]; then
		$DAEMON shutdown
		rm -f $STATUS_FILE
	fi
	sleep 0.1
	$DAEMON init
	echo "."
	;;
  *)
	N=/etc/init.d/$NAME
	# echo "Usage: $N {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $N {start|stop|restart|force-reload}" >&2
	exit 1
	;;
esac

exit 0
