<?xml version="1.0" encoding="utf-8" ?>
<article ns="http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
        <articleinfo>
		<author>
			<firstname>Andreas</firstname>
			<surname>Jellinghaus</surname>
			<email>aj@dungeon.inka.de</email>
		</author>
		<title>OpenCT Manual</title>
	</articleinfo>

	<toc />

	<section>
		<title>About OpenCT</title>

		<para>
			OpenCT is an open source implmentation providing card
			terminal drivers. OpenCT was written by Olaf Kirch.
		</para>

		<para>
			OpenCT provides CT-API drivers, ifdhandler drivers
			as well as it's own resource manager for direct
			use by applications.
		</para>
		
	</section>

	<section>
		<title>OpenCT files and tools</title>

		<para>
			This section will list all tools and files and
			explain what they do.
		</para>

		<section>
			<title>/var/run/openct	OpenCT status directory</title>

			<para>
				This directory holds status files for openct.
				Create it with: <screen>
mkdir /var/run/openct
chmod 755 /var/run/openct
				</screen>
			</para>
			
			<para>
				By default everyone can use smartcards via
				openct. You can create a group "openct", assign
				users to that group, and limit access to 
				smartcards via openct like this:
				<screen>
chgrp openct /var/run/openct
chmod 750 /var/run/openct
				</screen>
			</para>
		</section>

		<section>
			<title>sbin/openct-control	OpenCT Manager</title>

			<para>
				Run openct-control once to setup the
				<filename>status</filename> file in
				<filename>/var/run/openct</filename>.
				Without that file OpenCT will not work.
			</para>

			<para>
				<screen>
aj@simulacron:~/openct$ sbin/openct-control 
usage: openct-control [-d] [-f configfile] command
  -d   enable debugging; repeat to increase verbosity
  -f   specify config file (default /etc/openct.conf
  -h   display this message

Where command is one of:
init - initialize OpenCT
attach device ident - attach a hotplug device
shutdown - shutdown OpenCT
				</screen>
			</para>

			<para>
				FIXME: maybe run openct-control everytime
				on bootup ?
			</para>
		</section>

		<section>
			<title>init script to start openct</title>

			<para>
				On debian systems install the init script
				like this: <screen>
# update-rc.d openct start 99 2 3 4 5 . stop 01 0 1 6 .
 Adding system startup for /etc/init.d/openct ...
   /etc/rc0.d/K01openct -> ../init.d/openct
   /etc/rc1.d/K01openct -> ../init.d/openct
   /etc/rc6.d/K01openct -> ../init.d/openct
   /etc/rc2.d/S99openct -> ../init.d/openct
   /etc/rc3.d/S99openct -> ../init.d/openct
   /etc/rc4.d/S99openct -> ../init.d/openct
   /etc/rc5.d/S99openct -> ../init.d/openct
#
				</screen>
			</para>

		</section>

		<section>
			<title>Linux with hotplugging</title>

			<para>
				If your kernel has hotplugging, you can
				configure your linux, so it will launch
				the driver when a usb crypto token is plugged
				in (and it terminates when you unplug your key).
			</para>

			<para>
				If the file
				<filename>/proc/sys/kernel/hotplug</filename>
				exists, then your kernel supports hotplugging.
				If not, it does not (check CONFIG_HOTPLUG in
				your kernel configuration).
			</para>

			<para>
				If your linux has no script
				<filename>/sbin/hotplug</filename> you can
				simply <screen>
ln -s /path/to/openct/sbin/hotplug.openct /sbin/htplug
				</screen>
			</para>
		</section>


		<section>
			<title>sbin/ifdhandler		OpenCT Device Handler</title>

			<para>
				This app is called by openct-control to handle
				onde device, e.g. a smartcard read or an usb
				token.
			</para>

			<para>
				<screen>
aj@simulacron:~/openct/bin$ ./ifdhandler 
usage: ifdhandler [-Hds] driver device socket
  -d   enable debugging; repeat to increase verbosity
  -H   hotplug device, monitor for detach
  -s   send error and debug messages to syslog
  -h   display this message
				</screen>
			</para>
		</section>

		<section>
			<title>bin/openct-tool</title>

			<para>
				<screen>
aj@simulacron:~/openct/bin$ ./openct-tool 
usage: print-atr [-d] [-f configfile] [-r reader] command ...
  -d   enable debugging; repeat to increase verbosity
  -f   specify config file (default /etc/ifd.conf
  -r   specify index of reader to use
  -h   display this message

command: can be one of the following
 list  list all readers found
 atr   print ATR of card in selected reader
 wait  wait for card to be inserted
 mf    try to select ATR of card
				</screen>
			</para>
		</section>

		<section>
			<title>bin/print-atr</title>

			<para>
				<screen>
aj@simulacron:~/openct$ bin/print-atr -h
usage: print-atr [-d] [-f configfile] [-r reader] [command]
  -d   enable debugging; repeat to increase verbosity
  -f   specify config file (default /etc/ifd.conf
  -r   specify index of reader to use
  -h   display this message

command: can be one of the following
 list  list all readers found
 atr   print ATR of card in selected reader
 mf    try to select ATR of card
				</screen>
			</para>
		</section>

		<section>
			<title>etc/openct.conf</title>

			<para>
				<screen>
# Set debug level
debug	= 0;
#
# Enable hot plugging
hotplug	= yes;
#
# Path to ifdhandler
ifdhandler = /usr/sbin/ifdhandler;
#
# Statically configure non-hotplug aware readers here
reader towitoko {
	driver = towitoko;
	device = /dev/ttyS1;
};

#
# Hotplug IDs
driver	etoken {
	ids = {
		usb:0529/050c,
	};
};
driver	egate {
	ids = {
		usb:0973/0001,
	};
};
				</screen>
			</para>
		</section>

		<section>
			<title>include/openct/</title>

			<para>
				<screen>
aj@simulacron:~/openct$ ls include/openct/
apdu.h    conf.h    driver.h  ifd.h      openct.h     protocol.h  socket.h
buffer.h  device.h  error.h   logging.h  pathnames.h  server.h    tlv.h
				</screen>
			</para>
		</section>

		<section>
			<title>lib/libifd.so</title>

			<para>
				<screen>
aj@simulacron:~/openct$ /bin/ls lib/libifd.*    
lib/libifd.a   lib/libifd.so    lib/libifd.so.0.0.0
lib/libifd.la  lib/libifd.so.0
				</screen>
			</para>
		</section>

	</section>

	<section>
		<title>Using OpenCT as CT-API driver</title>

		<para>
			Install and configure the directory
			<filename>/etc/openct.conf</filename> as discussed.
			Configure your CT-API application to load
			<filename>lib/ifd-ctapi.so</filename>.
		</para>

		<para>
			For example to use openct with pcsc-lite,
			configure <filename>/etc/reader.conf</filename>
			this way:
			<screen>
FIXME: 
add valid reader.conf entry to use
openct ifd-ctapi.so
			</screen>
		</para>

		<para>
			If your application does not support shared
			libraries, maybe you have better luck with the
			static library <filename>lib/ifd-ctapi.a</filename>.
			(This is completely untested.)
		</para>
	</section>

	<section>
		<title>Using OpenCT as IfdHandler</title>

		<para>
			Install and configure the directory
			<filename>/etc/openct.conf</filename> as discussed.
			Configure your CT-API application to load
			<filename>lib/ifdhandler.so</filename>.
		</para>

		<para>
			For example to use openct with pcsc-lite,
			configure <filename>/etc/reader.conf</filename>
			this way:
			<screen>
FIXME: 
add valid reader.conf entry to use
openct ifdhandeler.so
			</screen>
		</para>

	</section>

	<section>
		<title>Writing smart card applications using openct</title>

		<para>
			OpenCT has a proprietory, but very easy to use
			interface. Take a look at the header files
			<filename>include/opensc/*.h</filename> and 
			the library <filename>lib/libopenct*</filename>.
		</para>

		<para>
			If your application uses autoconf, we made
			it easy for you to search for openct and
			link with libopenct by shipping openct with
			a pkg-config file:
			<filename>lib/pkg-config/libopenct.pc</filename>
		</para>

		<para>
			See the pkg-config man page for detailed information.
		</para>
	</section>
</article>
